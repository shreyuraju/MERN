nvm install latest: To install the latest stable version

nvm list available: Show a list of versions available for download.

nvm use <version>: Switch to use the specified version.

in object key shld be Unique


if ther is an error of authorization, run this 3 cmds in terminal

Set-ExecutionPolicy -Scope CurrentUser -ExecutionPolicy Unrestricted -Force
Set-ExecutionPolicy -Scope CurrentUser -ExecutionPolicy Bypass -Force
Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser

//creating react app                       //if you have already has folder go inside and run this cmd
1. npx create-react-app reactapp      ||    npm install //to download node_modules

2. npm react-router-dom --force

//to run react-app change directory to appfolder

3. npm start

//"npm i package-name"    it can be use to install
//"npm uninstall package-name"    it can used to uninstall



//JXS tags are used in return function in App.js


//creating new component

create file as filename.jsx
type rfc (react functional component) and ENTER


//11/02/23
tags shold have 1 parent element(tags), this we can use <></> & <div></div>
we can add any tag to print

//STYLING

//inline styling and internal styling
style={{backgroundColor:"red", color:"green"}}    

//for internal
const mystyle = {
    color:"blue",
    backgroundColor:"yellow"
  }
style={mystyle}

for external
we need to create .css file and import to app.js to use it
import './extcss.css'

className='name'   //inside tags

if we want to import outside the folder we need to use ../folder-name/file-name

//ALL FILE SHOULD BE IN "src" FOLDER


ES6 is ECMaSCRIPT

//creaeing classes in components, before the return function
CLASS is a type of function
rt default function Classes() {
    class Car {
        constructor(name) {                 //its a syntax method
            this.brand=name;
        }
		Present() {                        //its a user defined method
            return "My Bike is "+ this.name
        }
    }

    const mycar = new Car("NISSAN");
//inside reurn function
{mycar.brand}

//we can also create user function as mentioned above
//for call the user function, in return function type

{mybike.Present()}

"  `   " //back click 
we can use to print

return `My Bike is ${this.name}`


//inheritence

//while coming on monday
create new class as Vehicle
print my new Vehicle is ...

////////////////////////////